*************************************Java Script**************************
* function returning functions
- Here return statement ends with function execution and specifies a value to be returned to the   function caller.
- Example:. function interviewQuestion(job){
		return function(name) {
			console.log(name + ', can you please explain what UX design ?');}}

* (IIFE) Imediate invoked function expressions.
- JavaScript function that reuns as soon as it is defined.It is a design pattern which is also known as a Self-Executing Anonymous Function 
- Example:. function () {
	var score = Math.random * 10;
	console.log(score >= 5);})();

* Closures : Ainner function has always access to the variables and parameters of its outer function,   even after the outer function has returned.
- Example:. 
	function interviewQuestion(job) {
		return function(name) {
		 if(job === 'teacher') {
		   console.log('what subject do you teach, ' + name + '?');}}}
	interviewQuestion('teacher')('john');

* Bind,Call,Apply
- call() : The call method sets the this inside the function and immediately executes that function.
- Syntax : function.call(thisArg, arg1, agr2, ...)
- Apply(): The apply() method is similar to call(). The difference is that the apply() method accepts an array of arguments instead of comma separated values.
- Syntax : function.apply(thisArg, [argumentsArr])
- Bind() : The bind method creates a new function and sets the this keyword to the specified object.
-Syntax : function.bind(thisArg, optionalArguments)

* ES6/ES2015 New Features
- variable declaration with let and const.
- Blocks and IIFS.
- Strings.
- Arrow Functions.
- Destructuring.
- Array.
- The Spread Operator.
- Rest and Default Parameter.
- Maps.
- Classes and Subclasses.

* Variable
- ES5 : Scope of variable declared in ES5 is within function scope. var is keyword to declare variable.
- ES6 : Scope of variable declared in ES6 is within block scope.let and const is keyword to declare variable.

* Blocks and IIFS.
- Data privacy .
Ex:. { const a=1;
          let b=2;
          var c=3; }
        console.log(a+b); //output: //error
        console.log(c); //output: 3

* Strings	
- String_.startWith('j') Method : used to comapare starting letter of string.
- String_.endWith('sm') Method : used to compare ending letter of string.
- String_.includes('oh') Method : used to compare inbetween from string.